initSidebarItems({"constant":[["PARALLEL_HASH_BYTE_THRESHOLD",""]],"fn":[["decrypt_with_password",""],["encrypt_with_password",""],["generate_keypair_from_privatekey","Create and return a keypair with  the given hex u8 array as the private key"],["generate_keys",""],["generate_random_bytes",""],["hash",""],["sign",""],["sign_blob",""],["verify",""]],"static":[["SECP256K1","A global, static context to avoid repeatedly creating contexts where one canâ€™t be passed"],["SHA256",""]],"struct":[["MerkleTree","A Merkle tree is a binary tree, with values of type `T` at the leafs, and where every internal node holds the hash of the concatenation of the hashes of its children nodes."],["Message","A (hashed) message input to an ECDSA signature"],["PublicKey","A Secp256k1 public key, used for verification of signatures"],["SecretKey","Secret 256-bit key used as `x` in an ECDSA signature"],["Signature","An ECDSA signature"]],"type":[["SaitoHash",""],["SaitoPrivateKey",""],["SaitoPublicKey",""],["SaitoSignature",""],["SaitoUTXOSetKey",""]]});