var searchIndex = JSON.parse('{\
"saito_rust":{"doc":"Welcome to Saito","t":[6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,3,3,4,3,13,13,13,13,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,17,17,17,17,17,6,11,11,11,11,5,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,11,11,11,11,11,12,11,11,12,11,3,17,3,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,12,12,12,12,12,12,3,3,17,3,7,7,6,6,6,6,6,3,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,13,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,0,0,0,0,0,3,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,12,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,17,17,3,6,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,13,13,3,3,4,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,13,3,4,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,3,3,6,3,3,6,3,3,3,3,3,3,6,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,11,11,12,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,13,13,17,3,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,3,17,17,17,3,3,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,8,5,5,10,10,13,13,13,13,13,13,13,13,17,3,4,13,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,5,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Error","Result","block","blockchain","blockring","burnfee","consensus","crypto","golden_ticket","hop","mempool","merkle","miner","networking","slip","staking","storage","test_utilities","time","transaction","util","wallet","BLOCK_HEADER_SIZE","Block","BlockPayout","BlockType","ConsensusValues","Full","Ghost","Header","Pruned","RouterPayout","add_transaction","block_payout","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","delete","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_for_net","downgrade_block_to_block_type","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","expected_difficulty","fee_transaction","find_winning_router","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","ft_idx","ft_num","generate","generate_consensus_values","generate_hashes","generate_merkle_root","generate_metadata","get_block_type","get_burnfee","get_creator","get_difficulty","get_fee_transaction_idx","get_golden_ticket_idx","get_has_fee_transaction","get_has_golden_ticket","get_has_issuance_transaction","get_hash","get_id","get_issuance_transaction_idx","get_lc","get_merkle_root","get_pre_hash","get_previous_block_hash","get_routing_work_for_creator","get_signature","get_staking_treasury","get_timestamp","get_total_fees","get_transactions","get_treasury","gt_idx","gt_num","has_golden_ticket","has_issuance_transaction","init","init","init","init","init","into","into","into","into","into","issuance_transaction_idx","it_idx","it_num","miner","miner_payout","ne","ne","ne","ne","new","new","new","new","nolan_falling_off_chain","on_chain_reorganization","publickey","random_number","random_number","rebroadcast_hash","rebroadcasts","router","router_payout","serialize","serialize","serialize_for_hash","serialize_for_net","serialize_for_signature","set_block_type","set_burnfee","set_creator","set_difficulty","set_fee_transaction_idx","set_golden_ticket_idx","set_has_fee_transaction","set_has_golden_ticket","set_has_issuance_transaction","set_hash","set_id","set_issuance_transaction_idx","set_lc","set_merkle_root","set_pre_hash","set_previous_block_hash","set_routing_work_for_creator","set_signature","set_staking_treasury","set_timestamp","set_total_fees","set_transactions","set_treasury","sign","slips_spent_this_block","staker","staker_payout","staker_slip","staking_treasury","staking_treasury","to_owned","to_owned","to_owned","to_owned","to_owned","total_fees","total_rebroadcast_fees_nolan","total_rebroadcast_nolan","total_rebroadcast_slips","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upgrade_block_to_block_type","validate","vzip","vzip","vzip","vzip","vzip","Blockchain","GENESIS_PERIOD","MAX_STAKER_RECURSION","MAX_TOKEN_SUPPLY","MIN_GOLDEN_TICKETS_DENOMINATOR","MIN_GOLDEN_TICKETS_NUMERATOR","PRUNE_AFTER_BLOCKS","UtxoSet","add_block","add_block_failure","add_block_success","add_block_to_blockchain","bit_pack","bit_unpack","blockring","blocks","borrow","borrow_mut","contains_block_hash_at_block_id","delete_block","delete_blocks","deref","deref_mut","downgrade_blockchain_data","drop","fmt","from","generate_fork_id","generate_last_shared_ancestor","get_block","get_block_sync","get_fork_id","get_latest_block","get_latest_block_hash","get_latest_block_id","get_mut_block","init","into","is_block_indexed","is_new_chain_the_longest_chain","new","print","run","set_broadcast_channel_sender","set_fork_id","staking","try_from","try_into","type_id","unwind_chain","update_genesis_period","utxoset","validate","vzip","wallet_lock","wind_chain","BlockRing","RING_BUFFER_LENGTH","RingItem","add_block","add_block","block_hashes","block_ring","borrow","borrow","borrow_mut","borrow_mut","contains_block_hash","contains_block_hash_at_block_id","delete_block","delete_block","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get_block_hashes_at_block_id","get_latest_block_hash","get_latest_block_id","get_longest_chain_block_hash_by_block_id","init","init","into","into","is_empty","new","new","on_chain_reorganization","on_chain_reorganization","print_lc","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BurnFee","HEARTBEAT","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","return_burnfee_for_block_produced_at_current_timestamp_in_nolan","return_routing_work_needed_to_produce_block_in_nolan","try_from","try_into","type_id","vzip","BlockchainAddBlockFailure","BlockchainAddBlockSuccess","BlockchainNewLongestChainBlock","MempoolNewBlock","MinerNewGoldenTicket","NetworkNewTransaction","SaitoMessage","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","run","to_owned","try_from","try_into","type_id","vzip","difficulty","hash","hash","hash","hash","ticket","transaction","MerkleTree","Message","PARALLEL_HASH_BYTE_THRESHOLD","PublicKey","SECP256K1","SHA256","SaitoHash","SaitoPrivateKey","SaitoPublicKey","SaitoSignature","SaitoUTXOSetKey","SecretKey","Signature","add_assign","add_exp_assign","algorithm","as_c_ptr","as_c_ptr","as_c_ptr","as_c_ptr","as_mut_c_ptr","as_mut_c_ptr","as_mut_c_ptr","as_mut_c_ptr","as_mut_ptr","as_mut_ptr","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","combine","combine_keys","count","decrypt_with_password","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","encrypt_with_password","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_compact","from_der","from_der_lax","from_secret_key","from_slice","from_slice","from_slice","from_str","from_str","from_str","from_vec","gen_nth_proof","gen_proof","generate_keypair_from_privatekey","generate_keys","generate_random_bytes","get_hash","get_hash","hash","hash","hash","height","index","index","index","index","index","index","index","index","index","index","init","init","init","init","init","into","into","into","into","into","into_iter","is_empty","is_empty","is_empty","iter","len","len","mul_assign","mul_assign","ne","ne","negate_assign","negate_assign","new","normalize_s","partial_cmp","partial_cmp","partial_cmp","partial_cmp","root_hash","serialize","serialize","serialize","serialize","serialize_compact","serialize_der","serialize_uncompressed","sign","sign_blob","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","GoldenTicket","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","deserialize_for_transaction","drop","fmt","from","generate_solution","get_publickey","get_random","get_target","get_vote","init","into","is_valid_solution","new","serialize","serialize_for_transaction","to_owned","try_from","try_into","type_id","vzip","HOP_SIZE","Hop","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","deserialize_from_net","drop","eq","fmt","from","generate_hop","get_from","get_sig","get_to","init","into","ne","new","serialize","serialize_for_net","set_from","set_sig","set_to","to_owned","try_from","try_into","type_id","vzip","LocalNewBlock","LocalTryBundleBlock","Mempool","MempoolMessage","add_block","add_golden_ticket","add_transaction","add_transaction_if_validates","borrow","borrow","borrow_mut","borrow_mut","bundle_block","can_bundle_block","clone","clone_into","delete_transactions","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get_routing_work_available","get_routing_work_needed","init","init","into","into","new","run","send_blocks_to_blockchain","set_broadcast_channel_sender","set_mempool_privatekey","set_mempool_publickey","to_owned","transactions","try_bundle_block","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MerkleTreeLayer","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","get_hash","hash","init","into","ne","new","to_owned","try_from","try_into","type_id","vzip","MineGoldenTicket","Miner","MinerMessage","StartMining","StopMining","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","difficulty","drop","drop","fmt","from","from","init","init","into","into","is_active","mine","mine_on_block_until_golden_ticket_found","new","run","set_broadcast_channel_sender","set_difficulty","set_is_active","set_target","target","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wallet_lock","api_message","filters","handlers","message_types","network","peer","APIMessage","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","deserialize","drop","eq","fmt","from","get_into_message_data","get_message_data","get_message_data_as_string","get_message_id","get_message_name","get_message_name_as_string","init","into","message_data","message_id","message_name","ne","new","new_from_string","serialize","serialize","to_owned","try_from","try_into","type_id","vzip","get_block_route_filter","post_transaction_route_filter","ws_upgrade_route_filter","get_block_handler","post_transaction_handler","ws_upgrade_handler","handshake_challenge","request_block_message","request_blockchain_message","send_block_head_message","send_blockchain_message","HandshakeChallenge","HandshakeNode","borrow","borrow","borrow_mut","borrow_mut","challenger_ip_address","challenger_node","challenger_pubkey","challenger_sig","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","init","init","into","into","ip_address","ne","ne","new","opponent_ip_address","opponent_node","opponent_pubkey","opponent_sig","public_key","serialize_raw","serialize_with_sig","set_challenger_sig","set_opponent_sig","set_timestamp","sig","timestamp","timestamp","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BLOCK_HASH_MASK","BLOCK_ID_MASK","RequestBlockMessage","RequestBlockMessageOptionsMask","SYNC_TYPE_MASK","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","get_block_hash","get_block_id","get_fork_id","init","into","new","serialize","try_from","try_into","type_id","vzip","RequestBlockchainMessage","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","from","get_fork_id","get_latest_block_hash","get_latest_block_id","init","into","new","serialize","try_from","try_into","type_id","vzip","SendBlockHeadMessage","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","from","get_block_hash","init","into","new","serialize","try_from","try_into","type_id","vzip","BLOCKCHAIN_BLOCK_DATA_SIZE","Full","Lite","SendBlockchainBlockData","SendBlockchainMessage","SyncType","block_hash","block_id","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","fmt","fmt","fmt","from","from","from","get_blocks_data","get_starting_hash","get_sync_type","init","init","init","into","into","into","new","number_of_transactions","pre_hash","serialize","timestamp","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","CHALLENGE_EXPIRATION_TIME","CHALLENGE_SIZE","LocalNetworkMonitoring","Network","NetworkMessage","Result","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","handshake_and_synchronize_chain","init","init","into","into","listen_for_messages","new","run","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","INBOUND_PEER_CONNECTIONS_GLOBAL","InboundPeer","InboundPeersDB","OUTBOUND_PEER_CONNECTIONS_GLOBAL","OutboundPeer","OutboundPeersDB","PEERS_DB_GLOBAL","PEERS_REQUEST_RESPONSES_GLOBAL","PEERS_REQUEST_WAKERS_GLOBAL","PeerFlags","PeerRequest","PeerSetting","PeersDB","RequestResponses","RequestWakers","SaitoPeer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_request_block_response","build_send_blockchain_message","build_serialized_challenge","clone","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","from","from","from","from","from","from","from","from","from","from","from","get_connection_id","get_has_completed_handshake","get_host","get_is_connected_or_connecting","get_is_from_peer_list","get_port","get_publickey","handle_inbound_peer_connection","handle_peer_message","host","init","init","init","init","init","init","init","init","init","init","init","initialize","initialize","initialize","initialize","initialize","into","into","into","into","into","into","into","into","into","into","into","into_future","new","new","poll","port","send_command","send_command_fire_and_forget","send_error_response","send_error_response_from_str","send_message_to_socket","send_response","send_response_from_str","sender","serialize","set_has_completed_handshake","set_is_connected_or_connecting","set_publickey","socket_handshake_verify","socket_receive_transaction","socket_send_block_header","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_sink","ATR","MinerInput","MinerOutput","Normal","Other","RouterInput","RouterOutput","SLIP_SIZE","Slip","SlipType","StakerDeposit","StakerOutput","StakerWithdrawalPending","StakerWithdrawalStaking","VipInput","VipOutput","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compare","delete","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize_from_net","drop","drop","eq","eq","equivalent","fmt","fmt","from","from","generate_utxoset_key","get_amount","get_hash","get_payout","get_publickey","get_slip_ordinal","get_slip_type","get_utxoset_key","get_uuid","hash","init","init","into","into","ne","new","on_chain_reorganization","serialize","serialize","serialize_for_net","serialize_input_for_signature","serialize_output_for_signature","set_amount","set_payout","set_publickey","set_slip_ordinal","set_slip_type","set_uuid","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","validate","vzip","vzip","Staking","add_deposit","add_pending","add_staker","borrow","borrow_mut","clone","clone_into","deposits","deref","deref_mut","drop","find_winning_staker","fmt","from","init","into","new","on_chain_reorganization","pending","remove_deposit","remove_pending","remove_staker","reset_staker_table","stakers","to_owned","try_from","try_into","type_id","validate_slip_in_deposits","validate_slip_in_pending","validate_slip_in_stakers","vzip","BLOCKS_DIR_PATH","DEFAULT_FILE_PATH","EARLYBIRDS_FILE_PATH","ISSUANCE_FILE_PATH","Storage","StorageConfigurer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","configure_storage","convert_issuance_into_slip","delete_block_from_disk","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","file_exists","from","from","from","generate_block_filename","init","init","init","initialize","into","into","into","load_block_from_disk","load_blocks_from_disk","read","read_lines_from_file","return_token_supply_slips_from_disk","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_block_to_disk","memory_stats","test_manager","TestManager","add_block","add_block_on_hash","blockchain_lock","borrow","borrow_mut","check_block_consistency","check_blockchain","check_token_supply","check_utxoset","clone","clone_into","deref","deref_mut","drop","fmt","from","generate_block","generate_block_and_metadata","generate_block_via_mempool","generate_blockchain","generate_transaction","init","into","latest_block_hash","mempool_lock","new","set_latest_block_hash","spam_mempool","to_owned","try_from","try_into","type_id","vzip","wallet_lock","Persistable","create_timestamp","format_timestamp","load","save","ATR","Fee","GoldenTicket","Issuance","Normal","Other","StakerDeposit","StakerWithdrawal","TRANSACTION_SIZE","Transaction","TransactionType","Vip","add_hop_to_path","add_input","add_output","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cumulative_fees","delete","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize_from_net","drop","drop","eq","eq","fmt","fmt","from","from","generate_metadata","generate_metadata_cumulative_fees","generate_metadata_cumulative_work","generate_metadata_fees_and_slips","generate_metadata_hashes","generate_rebroadcast_transaction","generate_transaction","generate_vip_transaction","get_hash_for_signature","get_inputs","get_message","get_mut_inputs","get_mut_outputs","get_outputs","get_path","get_routing_work_for_publickey","get_signature","get_timestamp","get_total_fees","get_transaction_type","get_winning_routing_node","init","init","inputs","into","into","is_atr_transaction","is_fee_transaction","is_golden_ticket","is_issuance_transaction","ne","new","on_chain_reorganization","outputs","routing_work_for_creator","routing_work_for_me","serialize","serialize","serialize_for_net","serialize_for_signature","set_hash_for_signature","set_inputs","set_message","set_outputs","set_path","set_signature","set_timestamp","set_transaction_type","sign","to_owned","to_owned","total_fees","total_in","total_out","try_from","try_from","try_from","try_into","try_into","type_id","type_id","validate","validate_routing_path","vzip","vzip","format_url_string","WALLET_SIZE","Wallet","WalletSlip","add_slip","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_golden_ticket_transaction","create_staking_deposit_transaction","create_staking_withdrawal_transaction","delete_block","delete_slip","delete_staked_slip","deref","deref","deref_mut","deref_mut","deserialize_for_disk","drop","drop","fmt","fmt","from","from","generate_slips","get_amount","get_available_balance","get_block_hash","get_block_id","get_filename","get_lc","get_password","get_privatekey","get_publickey","get_slip_ordinal","get_spent","get_utxokey","get_uuid","init","init","into","into","load","load_wallet","new","new","on_chain_reorganization","privatekey","publickey","save","serialize_for_disk","set_amount","set_block_hash","set_block_id","set_filename","set_lc","set_password","set_privatekey","set_publickey","set_slip_ordinal","set_spent","set_utxokey","set_uuid","sign","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["saito_rust","","","","","","","","","","","","","","","","","","","","","","saito_rust::blocksaito_rust::blockchain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::blockring","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::burnfee","","","","","","","","","","","","","","","","saito_rust::consensus","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::consensus::SaitoMessage","","","","","","","saito_rust::cryptosaito_rust::golden_ticket","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::hop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::mempool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::merkle","","","","","","","","","","","","","","","","","","","","","","saito_rust::miner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::networking","","","","","","saito_rust::networking::api_message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::networking::filters","","","saito_rust::networking::handlers","","","saito_rust::networking::message_types","","","","","saito_rust::networking::message_types::handshake_challenge","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::networking::message_types::request_block_message","","","","","","","","","","","","","","","","","","","","","","","saito_rust::networking::message_types::request_blockchain_message","","","","","","","","","","","","","","","","","","","","saito_rust::networking::message_types::send_block_head_message","","","","","","","","","","","","","","","","","","saito_rust::networking::message_types::send_blockchain_message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::networking::network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::networking::peersaito_rust::slip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::staking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::test_utilities","","saito_rust::test_utilities::test_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::time","","","","","saito_rust::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","saito_rust::util","saito_rust::wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Error returned by most functions.","A specialized <code>Result</code> type for operations.","","","","","","","","","","","","Networking Interfaces and Methods","","","","","","","","","","","","BlockType is a human-readable indicator of the state of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserialize from bytes to a Block. [len of transactions - …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize a Block for transport or disk. [len of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create new <code>BlockRing</code>","","","","","","","","","","","","","","","","","","","","","","Returns an adjusted burnfee based on the start value …","Returns the amount of work needed to produce a block given …","","","","","","","","","","","Saito has the following system-wide messages which may be …","","","","","","","","","","","","The entry point to the Saito consensus runtime","","","","","","","","","","","","","A Merkle tree is a binary tree, with values of type <code>T</code> at …","A (hashed) message input to an ECDSA signature","","A Secp256k1 public key, used for verification of signatures","A global, static context to avoid repeatedly creating …","","","","","","","Secret 256-bit key used as <code>x</code> in an ECDSA signature","An ECDSA signature","Adds one secret key to another, modulo the curve order. …","Adds the pk corresponding to <code>other</code> to the pk <code>self</code> in place …","The hashing algorithm used by this Merkle tree","","","","","","","","","Converts the object to a mutable raw pointer for FFI …","Converts the object to a mutable raw pointer for FFI …","Obtains a raw mutable pointer suitable for use with FFI …","Obtains a raw mutable pointer suitable for use with FFI …","Converts the object to a raw pointer for FFI interfacing","Converts the object to a raw pointer for FFI interfacing","Obtains a raw const pointer suitable for use with FFI …","Obtains a raw pointer suitable for use with FFI functions","Gets a reference to the underlying array","Gets a reference to the underlying array","","","","","","","","","","","","","","","","","","","","","","","","","Adds a second key to this one, returning the sum. Returns …","Adds the keys in the provided slice together, returning …","Returns the number of leaves in the Merkle tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a 32-byte hash directly to a message without …","","","","","","Converts a 64-byte compact-encoded byte slice to a …","Converts a DER-encoded byte slice to a signature","Converts a “lax DER”-encoded byte slice to a …","Creates a new public key from a secret key.","Converts a <code>SECRET_KEY_SIZE</code>-byte slice to a secret key","<strong>If you just want to sign an arbitrary message use </strong>…","Creates a public key directly from a slice","","","","Constructs a Merkle Tree from a vector of data blocks. …","Generate an inclusion proof for the <code>n</code>-th leaf value.","Generate an inclusion proof for the given value. Returns …","Create and return a keypair with  the given hex u8 array …","","","","","","","","Returns the height of Merkle tree","","","","","","","","","","","","","","","","","","","","","Creates a consuming iterator, that is, one that moves each …","Returns whether the object as an array is empty","Returns whether the object as an array is empty","Returns whether the Merkle tree is empty or not","Creates an <code>Iterator</code> over the values contained in this …","Returns the length of the object as an array","Returns the length of the object as an array","Multiplies one secret key by another, modulo the curve …","Muliplies the pk <code>self</code> in place by the scalar <code>other</code> Will …","","","Negates one secret key.","Negates the pk to the pk <code>self</code> in place Will return an …","Creates a new random secret key. Requires compilation with …","Normalizes a signature to a “low S” form. In ECDSA, …","","","","","Returns the root hash of Merkle tree","","","Serialize the key as a byte-encoded pair of values. In …","","Serializes the signature in compact format","Serializes the signature in DER format","Serialize the key as a byte-encoded pair of values, in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Mempool</code> holds unprocessed blocks and transactions and …","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the work available in mempool to produce a block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The core data type for transporting data across the Saito …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get block filter. TODO remove this? I believe we want ot …","POST tx filter. TODO remove this? I believe we want ot use …","websocket upgrade filter.","get block handler.","POST tx filter. TODO remove this? I believe we want ot use …","websocket upgrade handler. accepts an http connection and …","","","","","","Data Object for passing handshake information. Is used as a","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data Object for REQBLOCK. Is used as a  payload in an …","a bitmask indicating which fields are filled in the …","","","","","","","","","","","","","","","","","","","","Data Object for REQCHAIN. Is used as a  payload in an …","","","","","","","","","","","","","","","","","","","","Data Object for SNDBLKHD <code>block_hash</code> - hash of block we …","","","","","","","","","","","","","","","","","","Data Object for SNDCHAIN. Is used as a payload in an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for Network listener, port etc.","","","","","","","","","","","","","","","","","After socket has been connected, the connector begins the …","","","","","","Create a Network","","","","","","","","","","","","An inbound Peer. This holds a Stream(Sender/Sink) for a …","","","An outbound Peer. This holds a Stream(Sender/Sink) for a …","","","","","Flags for Peer state.","","Settings for remote Peers","","","","A Peer. i.e. another node in the network.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spawns a task to read messages from the socket of inbound …","handle any APIMessage from the socket. RESULT/ERROR will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This creates a PeerRequest Future(which sends the …","sends a command to the peer’s socket but doesn’t not …","Helper function for sending errors","Helper function for sending basic errors with a string …","Sends an APIMessage to a socket connection. Since Outbound …","Helper function for sending RESULT__.","Helper function for sending basic OK results.","","","","this setter also will reset the appropriate flags on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of a serilized slip in bytes.","","SlipType is a human-readable indicator of the slip-type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","read from a path to a Vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TransactionType is a human-readable indicator of the type …","","","","","","","","","","","","","","","","","","","","","Deserialize from bytes to a Transaction. [len of inputs - …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs when the chain is re-organized","","","","","","Serialize a Transaction for transport or disk. [len of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Wallet</code> manages the public and private keypair of the …","The <code>WalletSlip</code> stores the essential information needed to …","","","","","","","","","","","","","","","","","","","","[privatekey - 32 bytes [publickey - 33 bytes]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","[privatekey - 32 bytes] [publickey - 33 bytes]","","","","","","","","","","","","","","","","","","","","","","",""],"if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["transaction",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["consensusvalues",3]],[[],["blockpayout",3]],[[],["routerpayout",3]],[[],["blocktype",4]],[[],["block",3]],[[]],[[]],[[]],[[]],[[]],[[["ahashmap",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["vec",3]],["block",3]],[[["blocktype",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["consensusvalues",3]],["bool",15]],[[["blockpayout",3]],["bool",15]],[[["routerpayout",3]],["bool",15]],[[["blocktype",4]],["bool",15]],[[["block",3]],["bool",15]],null,null,[[["saitohash",6]],["routerpayout",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,null,[[["arc",3,["rwlock"]],["vec",3],["rwlock",3,["wallet"]],["arc",3,["rwlock"]],["rwlock",3,["blockchain"]],["u64",15],["saitohash",6]]],[[["blockchain",3]]],[[],["saitohash",6]],[[],["saitohash",6]],[[],["bool",15]],[[],["blocktype",4]],[[],["u64",15]],[[],["saitopublickey",6]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["saitohash",6]],[[],["u64",15]],[[],["u64",15]],[[],["bool",15]],[[],["saitohash",6]],[[],["saitohash",6]],[[],["saitohash",6]],[[],["u64",15]],[[],["saitosignature",6]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["vec",3]],[[],["u64",15]],null,null,null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["consensusvalues",3]],["bool",15]],[[["blockpayout",3]],["bool",15]],[[["routerpayout",3]],["bool",15]],[[["block",3]],["bool",15]],[[],["consensusvalues",3]],[[],["blockpayout",3]],[[],["routerpayout",3]],[[],["block",3]],null,[[["ahashmap",3],["bool",15]],["bool",15]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],[["vec",3,["u8"]],["u8",15]]],[[["blocktype",4]],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[["blocktype",4]]],[[["u64",15]]],[[["saitopublickey",6]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["saitohash",6]]],[[["u64",15]]],[[["u64",15]]],[[["bool",15]]],[[["saitohash",6]]],[[["saitohash",6]]],[[["saitohash",6]]],[[["u64",15]]],[[["saitosignature",6]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["vec",3]]],[[["u64",15]]],[[["saitoprivatekey",6],["saitopublickey",6]]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["blocktype",4]]],[[["ahashmap",3],["blockchain",3],["staking",3]]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["block",3]]],[[]],[[["saitohash",6]]],[[["arc",3,["rwlock"]],["rwlock",3,["blockchain"]],["block",3]]],[[["u32",15]],["u64",15]],[[["u64",15]]],null,null,[[]],[[]],[[["u64",15],["saitohash",6]],["bool",15]],[[["u64",15],["saitohash",6]]],[[["u64",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[["u64",15]],["saitohash",6]],[[["u64",15],["saitohash",6]],["u64",15]],[[["saitohash",6]]],[[["saitohash",6]],[["block",3],["option",4,["block"]]]],[[],["saitohash",6]],[[],[["block",3],["option",4,["block"]]]],[[],["saitohash",6]],[[],["u64",15]],[[["saitohash",6]]],[[],["usize",15]],[[]],[[["saitohash",6]],["bool",15]],[[["vec",3]],["bool",15]],[[["rwlock",3,["wallet"]],["arc",3,["rwlock"]]]],[[]],[[["arc",3,["rwlock"]],["sender",3,["saitomessage"]],["receiver",3,["saitomessage"]],["saitomessage",4],["rwlock",3,["blockchain"]]]],[[["sender",3,["saitomessage"]],["saitomessage",4]]],[[["saitohash",6]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["usize",15],["vec",3],["bool",15],["vec",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[]],null,[[["vec",3]]],[[]],null,[[["usize",15],["vec",3],["bool",15],["vec",3]],[["pin",3,["box"]],["box",3,["future"]]]],null,null,null,[[["u64",15],["saitohash",6]]],[[["block",3]]],null,null,[[]],[[]],[[]],[[]],[[["saitohash",6]],["bool",15]],[[["u64",15],["saitohash",6]],["bool",15]],[[["u64",15],["saitohash",6]]],[[["u64",15],["saitohash",6]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u64",15]],[["saitohash",6],["vec",3,["saitohash"]]]],[[],["saitohash",6]],[[],["u64",15]],[[["u64",15]],["saitohash",6]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[["saitohash",6],["bool",15]],["bool",15]],[[["u64",15],["saitohash",6],["bool",15]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[],["saitomessage",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",4,["error"]],["error",4]]],[[["secp256k1",3]],[["result",4,["error"]],["error",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["secretkey",3]],[[],["message",3]],[[],["publickey",3]],[[],["signature",3]],[[],["merkletree",3]],[[]],[[]],[[]],[[]],[[]],[[["secretkey",3]],["ordering",4]],[[["message",3]],["ordering",4]],[[["publickey",3]],["ordering",4]],[[["merkletree",3]],["ordering",4]],[[["publickey",3]],[["result",4,["publickey","error"]],["publickey",3],["error",4]]],[[],[["result",4,["publickey","error"]],["publickey",3],["error",4]]],[[],["usize",15]],[[["vec",3,["u8"]],["u8",15],["str",15]],[["vec",3,["u8"]],["u8",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["secretkey",3],["result",4,["secretkey"]]]],[[],[["result",4,["publickey"]],["publickey",3]]],[[],[["signature",3],["result",4,["signature"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["vec",3,["u8"]],["u8",15],["str",15]],[["vec",3,["u8"]],["u8",15]]],[[["secretkey",3]],["bool",15]],[[["message",3]],["bool",15]],[[["publickey",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["merkletree",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],["message",3]],[[]],[[["publickey",3]],["publickey",3]],[[]],[[["signature",3]],["signature",3]],[[]],[[],[["signature",3],["result",4,["signature","error"]],["error",4]]],[[],[["signature",3],["result",4,["signature","error"]],["error",4]]],[[],[["signature",3],["result",4,["signature","error"]],["error",4]]],[[["secp256k1",3],["secretkey",3]],["publickey",3]],[[],[["secretkey",3],["error",4],["result",4,["secretkey","error"]]]],[[],[["result",4,["message","error"]],["message",3],["error",4]]],[[],[["result",4,["publickey","error"]],["publickey",3],["error",4]]],[[["str",15]],[["secretkey",3],["error",4],["result",4,["secretkey","error"]]]],[[["str",15]],[["result",4,["publickey","error"]],["publickey",3],["error",4]]],[[["str",15]],[["signature",3],["result",4,["signature","error"]],["error",4]]],[[["vec",3,["global"]],["algorithm",3],["global",3]],["merkletree",3]],[[["usize",15]],[["option",4,["proof"]],["proof",3]]],[[],[["option",4,["proof"]],["proof",3]]],[[]],[[]],[[["u64",15]],[["vec",3,["u8"]],["u8",15]]],[[],["u64",15]],[[],["u64",15]],[[["vec",3]],["saitohash",6]],[[]],[[]],[[],["usize",15]],[[["usize",15],["rangeto",3,["usize"]]]],[[["range",3,["usize"]],["usize",15]]],[[["rangefull",3]]],[[["usize",15]],["u8",15]],[[["usize",15],["rangefrom",3,["usize"]]]],[[["usize",15]],["u8",15]],[[["range",3,["usize"]],["usize",15]]],[[["usize",15],["rangefrom",3,["usize"]]]],[[["rangefull",3]]],[[["usize",15],["rangeto",3,["usize"]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["leavesiterator",3]],[[],["usize",15]],[[],["usize",15]],[[],[["result",4,["error"]],["error",4]]],[[["secp256k1",3]],[["result",4,["error"]],["error",4]]],[[["publickey",3]],["bool",15]],[[["signature",3]],["bool",15]],[[]],[[["secp256k1",3]]],[[],["secretkey",3]],[[]],[[["secretkey",3]],[["option",4,["ordering"]],["ordering",4]]],[[["message",3]],[["option",4,["ordering"]],["ordering",4]]],[[["publickey",3]],[["option",4,["ordering"]],["ordering",4]]],[[["merkletree",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["vec",3]],[[],["result",4]],[[],["result",4]],[[]],[[],["result",4]],[[]],[[],["serializedsignature",3]],[[]],[[["saitoprivatekey",6]],["saitosignature",6]],[[["saitoprivatekey",6],["vec",3]],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["saitopublickey",6],["saitosignature",6]],["bool",15]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["goldenticket",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["vec",3,["u8"]],["u8",15]],["goldenticket",3]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[["saitopublickey",6],["saitohash",6]],["saitohash",6]],[[],["saitopublickey",6]],[[],["saitohash",6]],[[],["saitohash",6]],[[],["u8",15]],[[],["usize",15]],[[]],[[["u64",15],["saitohash",6]],["bool",15]],[[["u8",15],["saitohash",6],["saitopublickey",6]]],[[],["result",4]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[],["hop",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["vec",3,["u8"]],["u8",15]],["hop",3]],[[["usize",15]]],[[["hop",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["rwlock",3,["wallet"]],["arc",3,["rwlock"]],["saitopublickey",6],["saitohash",6]]],[[],["saitopublickey",6]],[[],["saitosignature",6]],[[],["saitopublickey",6]],[[],["usize",15]],[[]],[[["hop",3]],["bool",15]],[[]],[[],["result",4]],[[],[["vec",3,["u8"]],["u8",15]]],[[["saitopublickey",6]]],[[["saitosignature",6]]],[[["saitopublickey",6]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[["block",3]]],[[["goldenticket",3]]],[[["transaction",3]]],[[["arc",3,["rwlock"]],["transaction",3],["rwlock",3,["blockchain"]]]],[[]],[[]],[[]],[[]],[[["arc",3,["rwlock"]],["rwlock",3,["blockchain"]],["u64",15]]],[[["arc",3,["rwlock"]],["rwlock",3,["blockchain"]],["u64",15]]],[[],["mempoolmessage",4]],[[]],[[["vec",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["u64",15]],[[["u64",15],["block",3]],["u64",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["rwlock",3,["wallet"]],["arc",3,["rwlock"]]]],[[["arc",3,["rwlock"]],["sender",3,["saitomessage"]],["arc",3,["rwlock"]],["saitomessage",4],["rwlock",3,["mempool"]],["rwlock",3,["blockchain"]],["receiver",3,["saitomessage"]]]],[[["arc",3,["rwlock"]],["arc",3,["rwlock"]],["rwlock",3,["mempool"]],["rwlock",3,["blockchain"]]]],[[["sender",3,["saitomessage"]],["saitomessage",4]]],[[["saitoprivatekey",6]]],[[["saitopublickey",6]]],[[]],null,[[["arc",3,["rwlock"]],["u64",15],["arc",3,["rwlock"]],["rwlock",3,["mempool"]],["rwlock",3,["blockchain"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[],["merkletreelayer",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["merkletreelayer",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[],["saitohash",6]],[[],["bool",15]],[[],["usize",15]],[[]],[[["merkletreelayer",3]],["bool",15]],[[["u8",15],["saitohash",6]],["merkletreelayer",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["minermessage",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,[[]],[[["u64",15],["saitohash",6]]],[[["rwlock",3,["wallet"]],["arc",3,["rwlock"]]],["miner",3]],[[["rwlock",3,["miner"]],["arc",3,["rwlock"]],["sender",3,["saitomessage"]],["saitomessage",4],["receiver",3,["saitomessage"]]]],[[["sender",3,["saitomessage"]],["saitomessage",4]]],[[["u64",15]]],[[["bool",15]]],[[["saitohash",6]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[],["apimessage",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["vec",3]],["apimessage",3]],[[["usize",15]]],[[["apimessage",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["vec",3]],[[],["string",3]],[[],["u32",15]],[[]],[[],["string",3]],[[],["usize",15]],[[]],null,null,null,[[["apimessage",3]],["bool",15]],[[["u8",15],["u32",15],["vec",3,["u8"]],["str",15]],["apimessage",3]],[[["str",15],["u32",15]],["apimessage",3]],[[],["result",4]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["arc",3,["rwlock"]],["rwlock",3,["blockchain"]]]],[[["arc",3,["rwlock"]],["arc",3,["rwlock"]],["rwlock",3,["mempool"]],["rwlock",3,["blockchain"]]]],[[["arc",3,["rwlock"]],["rwlock",3,["wallet"]],["arc",3,["rwlock"]],["arc",3,["rwlock"]],["rwlock",3,["mempool"]],["rwlock",3,["blockchain"]]]],[[["arc",3,["rwlock"]],["rwlock",3,["blockchain"]],["string",3]]],[[["arc",3,["rwlock"]],["arc",3,["rwlock"]],["rwlock",3,["mempool"]],["rwlock",3,["blockchain"]]]],[[["rwlock",3,["peersdb"]],["arc",3,["rwlock"]],["arc",3,["rwlock"]],["arc",3,["rwlock"]],["arc",3,["rwlock"]],["rwlock",3,["wallet"]],["rwlock",3,["mempool"]],["rwlock",3,["blockchain"]],["ws",3]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,[[],["saitopublickey",6]],[[],[["option",4,["saitosignature"]],["saitosignature",6]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["vec",3]],["handshakechallenge",3]],[[["usize",15]]],[[["usize",15]]],[[["handshakechallenge",3]],["bool",15]],[[["handshakenode",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,[[["handshakechallenge",3]],["bool",15]],[[["handshakenode",3]],["bool",15]],[[]],[[]],null,[[],["saitopublickey",6]],[[],[["option",4,["saitosignature"]],["saitosignature",6]]],null,[[],[["vec",3,["u8"]],["u8",15]]],[[["saitoprivatekey",6]],[["vec",3,["u8"]],["u8",15]]],[[["option",4,["saitosignature"]],["saitosignature",6]]],[[["option",4,["saitosignature"]],["saitosignature",6]]],[[["u64",15]]],null,[[],["u64",15]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["vec",3]],["requestblockmessage",3]],[[["usize",15]]],[[]],[[],["option",4]],[[],[["u64",15],["option",4,["u64"]]]],[[],["option",4]],[[],["usize",15]],[[]],[[["u64",15],["option",4,["u64"]],["option",4,["saitohash"]],["option",4,["synctype"]],["saitohash",6],["synctype",4]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["vec",3]],["requestblockchainmessage",3]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["saitohash",6]],[[],["saitohash",6]],[[],["u64",15]],[[],["usize",15]],[[]],[[["u64",15],["saitohash",6]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["vec",3]],["sendblockheadmessage",3]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["saitohash",6]],[[],["usize",15]],[[]],[[["saitohash",6]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["synctype",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["vec",3]],["sendblockchainmessage",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["synctype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["vec",3]],[[],["saitohash",6]],[[],["synctype",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["vec",3,["sendblockchainblockdata"]],["sendblockchainblockdata",3],["synctype",4],["saitohash",6]]],null,null,[[],[["vec",3,["u8"]],["u8",15]]],null,[[]],[[],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["networkmessage",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["rwlock",3,["wallet"]],["saitohash",6],["arc",3,["rwlock"]]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["receiver",3,["saitomessage"]],["saitomessage",4]]],[[["arc",3,["rwlock"]],["rwlock",3,["wallet"]],["arc",3,["rwlock"]],["arc",3,["rwlock"]],["rwlock",3,["mempool"]],["rwlock",3,["blockchain"]]],["network",3]],[[["arc",3,["rwlock"]],["arc",3,["rwlock"]],["saitomessage",4],["arc",3,["rwlock"]],["rwlock",3,["wallet"]],["receiver",3,["saitomessage"]],["config",3],["rwlock",3,["mempool"]],["rwlock",3,["blockchain"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["apimessage",3],["arc",3,["rwlock"]],["rwlock",3,["blockchain"]]]],[[["arc",3,["rwlock"]],["requestblockchainmessage",3],["rwlock",3,["blockchain"]]]],[[["apimessage",3],["rwlock",3,["wallet"]],["arc",3,["rwlock"]]]],[[],["peersetting",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["arc",3]],[[],["arc",3]],[[["usize",15]]],[[],["arc",3]],[[["usize",15]]],[[],["arc",3]],[[["usize",15]]],[[],["arc",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["saitohash",6]],[[],["bool",15]],[[],["option",4]],[[],["bool",15]],[[],["bool",15]],[[],[["u16",15],["option",4,["u16"]]]],[[],[["saitopublickey",6],["option",4,["saitopublickey"]]]],[[["rwlock",3,["peersdb"]],["websocket",3],["arc",3,["rwlock"]],["arc",3,["rwlock"]],["arc",3,["rwlock"]],["arc",3,["rwlock"]],["rwlock",3,["wallet"]],["rwlock",3,["mempool"]],["rwlock",3,["blockchain"]]]],[[["apimessage",3],["saitohash",6]]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rwlock",3,["blockchain"]],["option",4,["u16"]],["arc",3,["rwlock"]],["arc",3,["rwlock"]],["arc",3,["rwlock"]],["rwlock",3,["wallet"]],["bool",15],["u16",15],["rwlock",3,["mempool"]],["saitohash",6],["option",4]],["saitopeer",3]],[[["u8",15],["vec",3,["u8"]],["str",15],["saitopeer",3]]],[[["pin",3],["context",3]],["poll",4]],null,[[["str",15],["vec",3,["u8"]],["u8",15]],[["pin",3,["box"]],["box",3,["future"]]]],[[["vec",3,["u8"]],["str",15],["u8",15]]],[[["vec",3,["u8"]],["u8",15],["u32",15]]],[[["str",15],["u32",15]]],[[["apimessage",3],["saitohash",6]]],[[["vec",3,["u8"]],["u8",15],["u32",15]]],[[["str",15],["u32",15]]],null,[[],["result",4]],[[["bool",15]]],[[["bool",15]]],[[["saitopublickey",6]]],[[["vec",3]],[["handshakechallenge",3],["option",4,["handshakechallenge"]]]],[[["apimessage",3]],[["transaction",3],["option",4,["transaction"]]]],[[["apimessage",3],["arc",3,["rwlock"]],["rwlock",3,["blockchain"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["sliptype",4]],[[],["slip",3]],[[]],[[]],[[["slip",3]],["u64",15]],[[["ahashmap",3]],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["vec",3,["u8"]],["u8",15]],["slip",3]],[[["usize",15]]],[[["usize",15]]],[[["sliptype",4]],["bool",15]],[[["slip",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["saitopublickey",6]],[[],["u8",15]],[[],["sliptype",4]],[[],["saitoutxosetkey",6]],[[],["saitohash",6]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["slip",3]],["bool",15]],[[]],[[["u64",15],["ahashmap",3],["bool",15]]],[[],["result",4]],[[],["result",4]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[["u64",15]]],[[["u64",15]]],[[["saitopublickey",6]]],[[["u8",15]]],[[["sliptype",4]]],[[["saitohash",6]]],[[]],[[]],[[],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["utxoset",6]],["bool",15]],[[]],[[]],null,[[["slip",3]]],[[["slip",3]]],[[["slip",3]],["bool",15]],[[]],[[]],[[],["staking",3]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["saitohash",6]],[["option",4,["slip"]],["slip",3]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["staking",3]],[[["block",3],["bool",15]]],null,[[["slip",3]],["bool",15]],[[["slip",3]],["bool",15]],[[["slip",3]],["bool",15]],[[["u64",15]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["slip",3]],["bool",15]],[[["slip",3]],["bool",15]],[[["slip",3]],["bool",15]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[["string",3]],["slip",3]],[[["string",3]]],[[["usize",15]]],[[["usize",15]]],[[],["string",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["str",15]],["bool",15]],[[]],[[]],[[]],[[["block",3]],["string",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["string",3]]],[[["arc",3,["rwlock"]],["rwlock",3,["blockchain"]]]],[[["str",15]],[["result",6,["vec"]],["vec",3,["u8"]]]],[[],[["lines",3,["bufreader"]],["result",6,["lines"]]]],[[],[["vec",3,["slip"]],["slip",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["vec",3,["u8"]],["u8",15],["str",15]]],[[["block",3]]],null,null,null,[[["u64",15],["usize",15],["bool",15],["transaction",3],["vec",3,["transaction"]]]],[[["u64",15],["usize",15],["bool",15],["transaction",3],["vec",3,["transaction"]],["saitohash",6]]],null,[[]],[[]],[[["block",3]]],[[]],[[]],[[]],[[],["testmanager",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[["u64",15],["usize",15],["bool",15],["transaction",3],["saitohash",6],["vec",3,["transaction"]]]],[[["u64",15],["usize",15],["bool",15],["transaction",3],["saitohash",6],["vec",3,["transaction"]]]],[[]],[[["u64",15],["saitohash",6]]],[[["u64",15]]],[[],["usize",15]],[[]],null,null,[[["arc",3,["rwlock"]],["rwlock",3,["wallet"]],["arc",3,["rwlock"]],["rwlock",3,["blockchain"]]]],[[["saitohash",6]]],[[["rwlock",3,["mempool"]],["arc",3,["rwlock"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[],["u64",15]],[[["u64",15]],[["strftimeitems",3],["delayedformat",3,["strftimeitems"]]]],[[["str",15]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["rwlock",3,["wallet"]],["arc",3,["rwlock"]],["saitopublickey",6]]],[[["slip",3]]],[[["slip",3]]],[[]],[[]],[[]],[[]],[[],["transactiontype",4]],[[],["transaction",3]],[[]],[[]],null,[[["ahashmap",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["vec",3,["u8"]],["u8",15]],["transaction",3]],[[["usize",15]]],[[["usize",15]]],[[["transactiontype",4]],["bool",15]],[[["transaction",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["saitopublickey",6]],["bool",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["saitopublickey",6]],["bool",15]],[[],["bool",15]],[[["transaction",3],["slip",3],["u64",15]],["transaction",3]],[[["u64",15],["rwlock",3,["wallet"]],["arc",3,["rwlock"]],["saitopublickey",6]]],[[["u64",15],["rwlock",3,["wallet"]],["arc",3,["rwlock"]],["saitopublickey",6]]],[[],[["saitohash",6],["option",4,["saitohash"]]]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[["saitopublickey",6]],["u64",15]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["transactiontype",4]],[[["saitohash",6]],["saitopublickey",6]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["transaction",3]],["bool",15]],[[]],[[["u64",15],["ahashmap",3],["bool",15]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[["saitohash",6]]],[[["vec",3,["slip"]],["slip",3]]],[[["vec",3,["u8"]],["u8",15]]],[[["vec",3,["slip"]],["slip",3]]],[[["vec",3,["hop"]],["hop",3]]],[[["saitosignature",6]]],[[["u64",15]]],[[["transactiontype",4]]],[[["saitoprivatekey",6]]],[[]],[[]],null,null,null,[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["utxoset",6],["staking",3]],["bool",15]],[[],["bool",15]],[[]],[[]],[[["u16",15]],["string",3]],null,null,null,[[["transaction",3],["block",3],["bool",15],["slip",3]]],[[]],[[]],[[]],[[]],[[],["wallet",3]],[[],["walletslip",3]],[[]],[[]],[[["goldenticket",3]]],[[["u64",15]]],[[["staking",3]]],[[["block",3]]],[[["slip",3]]],[[["slip",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["vec",3]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u64",15]]],[[],["u64",15]],[[],["u64",15]],[[],["saitohash",6]],[[],["u64",15]],[[],["string",3]],[[],["bool",15]],[[],["string",3]],[[],["saitoprivatekey",6]],[[],["saitopublickey",6]],[[],["u8",15]],[[],["bool",15]],[[],["saitoutxosetkey",6]],[[],["saitohash",6]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["str",15],["option",4,["str"]]]],[[],["wallet",3]],[[]],[[["block",3],["bool",15]]],null,null,[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[["u64",15]]],[[["saitohash",6]]],[[["u64",15]]],[[["string",3]]],[[["bool",15]]],[[["string",3]]],[[["saitoprivatekey",6]]],[[["saitopublickey",6]]],[[["u8",15]]],[[["bool",15]]],[[["saitoutxosetkey",6]]],[[["saitohash",6]]],[[],["saitosignature",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[4,"BlockType"],[3,"Block"],[3,"ConsensusValues"],[3,"BlockPayout"],[3,"RouterPayout"],[3,"Blockchain"],[3,"RingItem"],[3,"BlockRing"],[3,"BurnFee"],[4,"SaitoMessage"],[13,"BlockchainNewLongestChainBlock"],[13,"BlockchainAddBlockSuccess"],[13,"BlockchainAddBlockFailure"],[13,"MempoolNewBlock"],[13,"MinerNewGoldenTicket"],[13,"NetworkNewTransaction"],[3,"SecretKey"],[3,"PublicKey"],[3,"MerkleTree"],[3,"Message"],[3,"Signature"],[3,"GoldenTicket"],[3,"Hop"],[4,"MempoolMessage"],[3,"Mempool"],[3,"MerkleTreeLayer"],[4,"MinerMessage"],[3,"Miner"],[3,"APIMessage"],[3,"HandshakeChallenge"],[3,"HandshakeNode"],[3,"RequestBlockMessage"],[3,"RequestBlockchainMessage"],[3,"SendBlockHeadMessage"],[4,"SyncType"],[3,"SendBlockchainBlockData"],[3,"SendBlockchainMessage"],[4,"NetworkMessage"],[3,"Network"],[3,"PeerFlags"],[3,"SaitoPeer"],[3,"InboundPeer"],[3,"OutboundPeer"],[3,"PeerRequest"],[3,"PEERS_DB_GLOBAL"],[3,"PEERS_REQUEST_RESPONSES_GLOBAL"],[3,"PEERS_REQUEST_WAKERS_GLOBAL"],[3,"INBOUND_PEER_CONNECTIONS_GLOBAL"],[3,"OUTBOUND_PEER_CONNECTIONS_GLOBAL"],[3,"PeerSetting"],[4,"SlipType"],[3,"Slip"],[3,"Staking"],[3,"StorageConfigurer"],[3,"Storage"],[3,"BLOCKS_DIR_PATH"],[3,"TestManager"],[8,"Persistable"],[4,"TransactionType"],[3,"Transaction"],[3,"Wallet"],[3,"WalletSlip"]]},\
"saitocli":{"doc":"Saito Command Line Wallet Interface","t":[5],"n":["main"],"q":["saitocli"],"d":[""],"i":[0],"f":[[[],["result",6]]],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};